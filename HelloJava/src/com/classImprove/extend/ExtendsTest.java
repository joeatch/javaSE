package com.classImprove.extend;
/*
* 1.什么是继承? 继承的好处是啥？
继承就是java允许我们用extends关键字，让一个类和另一个类建立起一种父子关系。
提高代码复用性，减少代码冗余，增强类的功能扩展性。
2.继承的格式
子类 extends父类
3.继承后子类的特点？
子类 继承父类，子类可以得到父类的属性和行为，子类可以使用。
Java中子类更强大
*/

/*继承的特点
    子类可以继承父类的属性和行为，但是子类不能继承父类的构造器。
    Java是单继承模式：一个类只能继承一个直接父类。
    Java不支持多继承、但是支持多层继承。
    Java中所有的类都是Object类的子类。
*
* */


/*1、子类是否可以继承父类的构造器？
        不可以的，子类有自己的构造器，父类构造器用于初始化父类对象。
  2.子类是否可以继承父类的私有成员？
        可以的，只是不能直接访问。
  3.子类是否可以继承父类的静态成员？
        子类不能继承父类的静态成员。（共享并非继承）
 *
* */
public class ExtendsTest {
    public static void main(String[] args) {
        Student stu1=new Student();
        Teacher teah1=new Teacher();
        stu1.name="学生1";
        stu1.age=18;
        teah1.name="老师1";
        teah1.age=48;
        System.out.println(teah1.age);
    }
}

/*
* 在子类方法中访问成员（成员变量、成员方法）满足：就近原则
    先子类局部范围找
    然后子类成员范围找
    然后父类成员范围找，如果父类范围还没有找到则报错。
*/
/*
如果子父类中，出现了重名的成员，会优先使用子类的，此时如果一定要在子类中使用父类的怎么办？
        可以通过super关键字，指定访问父类的成员。*/

/*什么是方法重写？
    在继承体系中，子类出现了和父类中一模一样的方法声明，我们就称子类这个方法是重写的方法。
方法重写的应用场景
    当子类需要父类的功能，但父类的该功能不完全满足自己的需求时。
    子类可以重写父类中的方法。
@Override重写注解
    @Override是放在重写后的方法上，作为重写是否正确的校验注解。
子类重写父类方法时，访问权限必须大于或者等于父类被重写的方法的权限。
*/

/*子类继承父类后构造器的特点：
    子类中所有的构造器默认都会先访问父类中无参的构造器，再执行自己。
super调用父类有参数构造器的作用：
    初始化继承自父类的数据。
*/

/*
* this和super详情
*   this：代表本类对象的引用；super：代表父类存储空间的标识。
 */